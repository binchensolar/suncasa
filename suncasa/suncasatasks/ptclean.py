##################### generated by xml-casa (v2) from ptclean.xml ###################
##################### 0ee078d6e13f9642f02709c6b10aa1d1 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_ptclean import ptclean as _ptclean_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _ptclean:
    """
    ptclean ---- Parallelized clean in consecutive time steps

    Parallelized clean in consecutive time steps. Packed over CASA clean.

    --------- parameter descriptions ---------------------------------------------

    vis            Name of input visibility file
    imageprefix    Prefix of output image names (usually useful in defining the output path)
    imagesuffix    Suffix of output image names (usually useful in specifyting the image type, version, etc.)
    ncpu           Number of cpu cores to use
    twidth         Number of time pixels to average
    doreg          True if use vla_prep to register the image
    usephacenter   True if use the phacenter information from the measurement set (e.g., VLA); False to assume the phase center is at the solar disk center (EOVSA)
    reftime        Reference time of the J2000 coordinates associated with the ephemeris target. e.g., "2012/03/03/12:00". This is used for helioimage2fits.py to find the solar x y offset in order to register the image. If not set, use the actual timerange of the image (default)
    toTb           True if convert to brightness temperature
    overwrite      True if overwrite the image
    outlierfile    Text file with image names, sizes, centers for outliers
    field          Field Name or id
    spw            Spectral windows e.g. \'0~3\', \'\' is all
    selectdata     Other data selection parameters
    timerange      Range of time to select from data
    uvrange        Select data within uvrange
    antenna        Select data based on antenna/baseline
    scan           Scan number range
    observation    Observation ID range
    intent         Scan Intent(s)
    mode           Spectral gridding type (mfs, channel, velocity, frequency)
    resmooth       Re-restore the cube image to a common beam when True
    gridmode       Gridding kernel for FFT-based transforms, default=\'\' None
    wprojplanes    Number of w-projection planes for convolution; -1 => automatic determination
    facets         Number of facets along each axis (main image only)
    cfcache        Convolution function cache directory
    rotpainc       Parallactic angle increment (degrees) for OTF A-term rotation
    painc          Parallactic angle increment (degrees) for computing A-term
    aterm          Switch-on the A-Term?
    psterm         Switch-on the PS-Term?
    mterm          Switch-on the M-Term?
    wbawp          Trigger the wide-band A-Projection algorithm?
    conjbeams      Use frequency conjugate beams in WB A-Projection algorithm?
    epjtable       Table of EP-Jones parameters
    interpolation  Spectral interpolation (nearest, linear, cubic).
    niter          Maximum number of iterations
    gain           Loop gain for cleaning
    threshold      Flux level to stop cleaning, must include units: \'1.0mJy\'
    psfmode        Method of PSF calculation to use during minor cycles
    imagermode     Options: \'csclean\' or \'mosaic\', \'\', uses psfmode
    ftmachine      Gridding method for the image
    mosweight      Individually weight the fields of the mosaic
    scaletype      Controls scaling of pixels in the image plane. default=\'SAULT\'; example: scaletype=\'PBCOR\' Options: \'PBCOR\',\'SAULT\'
    multiscale     Deconvolution scales (pixels); [] = standard clean
    negcomponent   Stop cleaning if the largest scale finds this number of neg components
    smallscalebias a bias to give more weight toward smaller scales
    interactive    Use interactive clean (with GUI viewer)
    mask           Cleanbox(es), mask image(s), region(s), or a level
    nchan          Number of channels (planes) in output image; -1 = all
    start          start of output spectral dimension
    width          width of output spectral channels
    outframe       default spectral frame of output image
    veltype        velocity definition (radio, optical, true)
    imsize         x and y image size in pixels.  Single value: same for both
    cell           x and y cell size(s). Default unit arcsec.
    phasecenter    Image center: direction or field index
    restfreq       Rest frequency to assign to image (see help)
    stokes         Stokes params to image (eg I,IV,IQ,IQUV)
    weighting      Weighting of uv (natural, uniform, briggs, ...)
    robust         Briggs robustness parameter
    uvtaper        Apply additional uv tapering of visibilities
    outertaper     uv-taper on outer baselines in uv-plane
    innertaper     uv-taper in center of uv-plane (not implemented)
    modelimage     Name of model image(s) to initialize cleaning
    restoringbeam  Output Gaussian restoring beam for CLEAN image
    pbcor          Output primary beam-corrected image
    minpb          Minimum PB level to use
    usescratch     True if to save model visibilities in MODEL_DATA column
    noise          noise parameter for briggs abs mode weighting
    npixels        number of pixels for superuniform or briggs weighting
    npercycle      Clean iterations before interactive prompt (can be changed)
    cyclefactor    Controls how often major cycles are done. (e.g. 5 for frequently)
    cyclespeedup   Cycle threshold doubles in this number of iterations
    nterms         Number of Taylor coefficients to model the sky frequency dependence
    reffreq        Reference frequency (nterms > 1),\'\' uses central data-frequency
    chaniter       Clean each channel to completion (True), or all channels each cycle (False)
    flatnoise      Controls whether searching for clean components is done in a constant noise residual image (True) or in an optimal signal-to-noise residual image (False)
    allowchunk     Divide large image cubes into channel chunks for deconvolution
    [1;42mRETURNS[1;m           void

    --------- examples -----------------------------------------------------------

    
    


    """

    _info_group_ = """imaging"""
    _info_desc_ = """Parallelized clean in consecutive time steps"""

    def __call__( self, vis='', imageprefix='', imagesuffix='', ncpu=int(8), twidth=int(1), doreg=False, usephacenter=False, reftime='', toTb=False, overwrite=False, outlierfile='', field='', spw='', selectdata=True, timerange='', uvrange='', antenna='', scan='', observation='', intent='', mode='mfs', resmooth=False, gridmode='', wprojplanes=int(-1), facets=int(1), cfcache='cfcache.dir', rotpainc=float(5.0), painc=float(360.0), aterm=True, psterm=False, mterm=True, wbawp=False, conjbeams=True, epjtable='', interpolation='linear', niter=int(500), gain=float(0.1), threshold={'value': float(0.0), 'unit': 'mJy'}, psfmode='clark', imagermode='csclean', ftmachine='mosaic', mosweight=False, scaletype='SAULT', multiscale=[ int(0) ], negcomponent=int(-1), smallscalebias=float(0.6), interactive=False, mask=[  ], nchan=int(-1), start=int(0), width=int(1), outframe='', veltype='radio', imsize=[ int(256),int(256) ], cell={'value': float(1.0), 'unit': 'arcsec'}, phasecenter='', restfreq='', stokes='I', weighting='natural', robust=float(0.0), uvtaper=False, outertaper=[ '' ], innertaper=[ '1.0' ], modelimage='', restoringbeam=[  ], pbcor=False, minpb=float(0.2), usescratch=False, noise='1.0Jy', npixels=int(0), npercycle=int(100), cyclefactor=float(1.5), cyclespeedup=int(-1), nterms=int(1), reffreq='', chaniter=False, flatnoise=True, allowchunk=False ):
        schema = {'vis': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'imageprefix': {'type': 'cStr', 'coerce': _coerce.to_str}, 'imagesuffix': {'type': 'cStr', 'coerce': _coerce.to_str}, 'ncpu': {'type': 'cInt'}, 'twidth': {'type': 'cInt'}, 'doreg': {'type': 'cBool'}, 'usephacenter': {'type': 'cBool'}, 'reftime': {'type': 'cStr', 'coerce': _coerce.to_str}, 'toTb': {'type': 'cBool'}, 'overwrite': {'type': 'cBool'}, 'outlierfile': {'type': 'cStr', 'coerce': _coerce.to_str}, 'field': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'spw': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'selectdata': {'type': 'cBool'}, 'timerange': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'uvrange': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'antenna': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'scan': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'observation': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cInt'}]}, 'intent': {'anyof': [{'type': 'cStr', 'coerce': _coerce.to_str}, {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}]}, 'mode': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'mfs', 'channel', 'velocity', 'frequency' ]}, 'resmooth': {'type': 'cBool'}, 'gridmode': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ '', 'widefield', 'aprojection', 'advancedaprojection' ]}, 'wprojplanes': {'type': 'cInt'}, 'facets': {'type': 'cInt'}, 'cfcache': {'type': 'cStr', 'coerce': _coerce.to_str}, 'rotpainc': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'painc': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'aterm': {'type': 'cBool'}, 'psterm': {'type': 'cBool'}, 'mterm': {'type': 'cBool'}, 'wbawp': {'type': 'cBool'}, 'conjbeams': {'type': 'cBool'}, 'epjtable': {'type': 'cStr', 'coerce': _coerce.to_str}, 'interpolation': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'nearest', 'linear', 'cubic', 'spline' ]}, 'niter': {'type': 'cInt'}, 'gain': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'threshold': {'type': 'cDoubleQuant'}, 'psfmode': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'clark', 'clarkstokes', 'hogbom' ]}, 'imagermode': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ '', 'csclean', 'mosaic' ]}, 'ftmachine': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'sd', 'awproject', 'ft', 'both', 'mosaic' ]}, 'mosweight': {'type': 'cBool'}, 'scaletype': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'SAULT', 'PBCOR' ]}, 'multiscale': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'negcomponent': {'type': 'cInt'}, 'smallscalebias': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'interactive': {'type': 'cBool'}, 'mask': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'nchan': {'type': 'cInt'}, 'start': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'width': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'outframe': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'geo', 'bary', 'lsrk', 'topo', 'lsrd', 'cmb', 'galacto', 'lgroup', '' ]}, 'veltype': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'radio', 'optical', 'true', 'relativistic' ]}, 'imsize': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'cell': {'type': 'cDoubleQuant'}, 'phasecenter': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'restfreq': {'type': 'cStr', 'coerce': _coerce.to_str}, 'stokes': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'I', 'IQUV', 'UV', 'RRLL', 'IQ', 'V', 'IUV', 'QU', 'YY', 'RR', 'Q', 'U', 'IV', 'XX', 'XXYY', 'IQU', 'LL' ]}, 'weighting': {'type': 'cStr', 'coerce': _coerce.to_str, 'allowed': [ 'briggsabs', 'briggs', 'natural', 'radial', 'superuniform', 'uniform' ]}, 'robust': {'type': 'cFloat', 'coerce': _coerce.to_float, 'min': -2.0, 'max': 2.0}, 'uvtaper': {'type': 'cBool'}, 'outertaper': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'innertaper': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'modelimage': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'restoringbeam': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'pbcor': {'type': 'cBool'}, 'minpb': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'usescratch': {'type': 'cBool'}, 'noise': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'npixels': {'type': 'cInt'}, 'npercycle': {'type': 'cInt'}, 'cyclefactor': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'cyclespeedup': {'type': 'cInt'}, 'nterms': {'type': 'cInt'}, 'reffreq': {'type': 'cStr', 'coerce': _coerce.to_str}, 'chaniter': {'type': 'cBool'}, 'flatnoise': {'type': 'cBool'}, 'allowchunk': {'type': 'cBool'}}
        doc = {'vis': vis, 'imageprefix': imageprefix, 'imagesuffix': imagesuffix, 'ncpu': ncpu, 'twidth': twidth, 'doreg': doreg, 'usephacenter': usephacenter, 'reftime': reftime, 'toTb': toTb, 'overwrite': overwrite, 'outlierfile': outlierfile, 'field': field, 'spw': spw, 'selectdata': selectdata, 'timerange': timerange, 'uvrange': uvrange, 'antenna': antenna, 'scan': scan, 'observation': observation, 'intent': intent, 'mode': mode, 'resmooth': resmooth, 'gridmode': gridmode, 'wprojplanes': wprojplanes, 'facets': facets, 'cfcache': cfcache, 'rotpainc': rotpainc, 'painc': painc, 'aterm': aterm, 'psterm': psterm, 'mterm': mterm, 'wbawp': wbawp, 'conjbeams': conjbeams, 'epjtable': epjtable, 'interpolation': interpolation, 'niter': niter, 'gain': gain, 'threshold': threshold, 'psfmode': psfmode, 'imagermode': imagermode, 'ftmachine': ftmachine, 'mosweight': mosweight, 'scaletype': scaletype, 'multiscale': multiscale, 'negcomponent': negcomponent, 'smallscalebias': smallscalebias, 'interactive': interactive, 'mask': mask, 'nchan': nchan, 'start': start, 'width': width, 'outframe': outframe, 'veltype': veltype, 'imsize': imsize, 'cell': cell, 'phasecenter': phasecenter, 'restfreq': restfreq, 'stokes': stokes, 'weighting': weighting, 'robust': robust, 'uvtaper': uvtaper, 'outertaper': outertaper, 'innertaper': innertaper, 'modelimage': modelimage, 'restoringbeam': restoringbeam, 'pbcor': pbcor, 'minpb': minpb, 'usescratch': usescratch, 'noise': noise, 'npixels': npixels, 'npercycle': npercycle, 'cyclefactor': cyclefactor, 'cyclespeedup': cyclespeedup, 'nterms': nterms, 'reffreq': reffreq, 'chaniter': chaniter, 'flatnoise': flatnoise, 'allowchunk': allowchunk}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'ptclean', [ 'vis=' + repr(_pc.document['vis']), 'imageprefix=' + repr(_pc.document['imageprefix']), 'imagesuffix=' + repr(_pc.document['imagesuffix']), 'ncpu=' + repr(_pc.document['ncpu']), 'twidth=' + repr(_pc.document['twidth']), 'doreg=' + repr(_pc.document['doreg']), 'usephacenter=' + repr(_pc.document['usephacenter']), 'reftime=' + repr(_pc.document['reftime']), 'toTb=' + repr(_pc.document['toTb']), 'overwrite=' + repr(_pc.document['overwrite']), 'outlierfile=' + repr(_pc.document['outlierfile']), 'field=' + repr(_pc.document['field']), 'spw=' + repr(_pc.document['spw']), 'selectdata=' + repr(_pc.document['selectdata']), 'timerange=' + repr(_pc.document['timerange']), 'uvrange=' + repr(_pc.document['uvrange']), 'antenna=' + repr(_pc.document['antenna']), 'scan=' + repr(_pc.document['scan']), 'observation=' + repr(_pc.document['observation']), 'intent=' + repr(_pc.document['intent']), 'mode=' + repr(_pc.document['mode']), 'resmooth=' + repr(_pc.document['resmooth']), 'gridmode=' + repr(_pc.document['gridmode']), 'wprojplanes=' + repr(_pc.document['wprojplanes']), 'facets=' + repr(_pc.document['facets']), 'cfcache=' + repr(_pc.document['cfcache']), 'rotpainc=' + repr(_pc.document['rotpainc']), 'painc=' + repr(_pc.document['painc']), 'aterm=' + repr(_pc.document['aterm']), 'psterm=' + repr(_pc.document['psterm']), 'mterm=' + repr(_pc.document['mterm']), 'wbawp=' + repr(_pc.document['wbawp']), 'conjbeams=' + repr(_pc.document['conjbeams']), 'epjtable=' + repr(_pc.document['epjtable']), 'interpolation=' + repr(_pc.document['interpolation']), 'niter=' + repr(_pc.document['niter']), 'gain=' + repr(_pc.document['gain']), 'threshold=' + repr(_pc.document['threshold']), 'psfmode=' + repr(_pc.document['psfmode']), 'imagermode=' + repr(_pc.document['imagermode']), 'ftmachine=' + repr(_pc.document['ftmachine']), 'mosweight=' + repr(_pc.document['mosweight']), 'scaletype=' + repr(_pc.document['scaletype']), 'multiscale=' + repr(_pc.document['multiscale']), 'negcomponent=' + repr(_pc.document['negcomponent']), 'smallscalebias=' + repr(_pc.document['smallscalebias']), 'interactive=' + repr(_pc.document['interactive']), 'mask=' + repr(_pc.document['mask']), 'nchan=' + repr(_pc.document['nchan']), 'start=' + repr(_pc.document['start']), 'width=' + repr(_pc.document['width']), 'outframe=' + repr(_pc.document['outframe']), 'veltype=' + repr(_pc.document['veltype']), 'imsize=' + repr(_pc.document['imsize']), 'cell=' + repr(_pc.document['cell']), 'phasecenter=' + repr(_pc.document['phasecenter']), 'restfreq=' + repr(_pc.document['restfreq']), 'stokes=' + repr(_pc.document['stokes']), 'weighting=' + repr(_pc.document['weighting']), 'robust=' + repr(_pc.document['robust']), 'uvtaper=' + repr(_pc.document['uvtaper']), 'outertaper=' + repr(_pc.document['outertaper']), 'innertaper=' + repr(_pc.document['innertaper']), 'modelimage=' + repr(_pc.document['modelimage']), 'restoringbeam=' + repr(_pc.document['restoringbeam']), 'pbcor=' + repr(_pc.document['pbcor']), 'minpb=' + repr(_pc.document['minpb']), 'usescratch=' + repr(_pc.document['usescratch']), 'noise=' + repr(_pc.document['noise']), 'npixels=' + repr(_pc.document['npixels']), 'npercycle=' + repr(_pc.document['npercycle']), 'cyclefactor=' + repr(_pc.document['cyclefactor']), 'cyclespeedup=' + repr(_pc.document['cyclespeedup']), 'nterms=' + repr(_pc.document['nterms']), 'reffreq=' + repr(_pc.document['reffreq']), 'chaniter=' + repr(_pc.document['chaniter']), 'flatnoise=' + repr(_pc.document['flatnoise']), 'allowchunk=' + repr(_pc.document['allowchunk']) ] )
        return _end_log( _logging_state_, 'ptclean', _ptclean_t( _pc.document['vis'], _pc.document['imageprefix'], _pc.document['imagesuffix'], _pc.document['ncpu'], _pc.document['twidth'], _pc.document['doreg'], _pc.document['usephacenter'], _pc.document['reftime'], _pc.document['toTb'], _pc.document['overwrite'], _pc.document['outlierfile'], _pc.document['field'], _pc.document['spw'], _pc.document['selectdata'], _pc.document['timerange'], _pc.document['uvrange'], _pc.document['antenna'], _pc.document['scan'], _pc.document['observation'], _pc.document['intent'], _pc.document['mode'], _pc.document['resmooth'], _pc.document['gridmode'], _pc.document['wprojplanes'], _pc.document['facets'], _pc.document['cfcache'], _pc.document['rotpainc'], _pc.document['painc'], _pc.document['aterm'], _pc.document['psterm'], _pc.document['mterm'], _pc.document['wbawp'], _pc.document['conjbeams'], _pc.document['epjtable'], _pc.document['interpolation'], _pc.document['niter'], _pc.document['gain'], _pc.document['threshold'], _pc.document['psfmode'], _pc.document['imagermode'], _pc.document['ftmachine'], _pc.document['mosweight'], _pc.document['scaletype'], _pc.document['multiscale'], _pc.document['negcomponent'], _pc.document['smallscalebias'], _pc.document['interactive'], _pc.document['mask'], _pc.document['nchan'], _pc.document['start'], _pc.document['width'], _pc.document['outframe'], _pc.document['veltype'], _pc.document['imsize'], _pc.document['cell'], _pc.document['phasecenter'], _pc.document['restfreq'], _pc.document['stokes'], _pc.document['weighting'], _pc.document['robust'], _pc.document['uvtaper'], _pc.document['outertaper'], _pc.document['innertaper'], _pc.document['modelimage'], _pc.document['restoringbeam'], _pc.document['pbcor'], _pc.document['minpb'], _pc.document['usescratch'], _pc.document['noise'], _pc.document['npixels'], _pc.document['npercycle'], _pc.document['cyclefactor'], _pc.document['cyclespeedup'], _pc.document['nterms'], _pc.document['reffreq'], _pc.document['chaniter'], _pc.document['flatnoise'], _pc.document['allowchunk'] ) )

ptclean = _ptclean( )

